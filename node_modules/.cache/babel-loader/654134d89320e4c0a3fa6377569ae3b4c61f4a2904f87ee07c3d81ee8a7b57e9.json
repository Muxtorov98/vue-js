{"ast":null,"code":"import axios from \"../axios\";\nexport default {\n  actions: {\n    fetchBook(context, categoryId = null, page = null) {\n      return new Promise((resolve, reject) => {\n        axios.get('http://localhost:8085/api/books', {\n          params: {\n            category: categoryId,\n            page: page\n          }\n        }).then(response => {\n          let books = {\n            models: response.data['hydra:member'],\n            totalItems: Math.ceil(response.data['hydra:totalItems'] / 2)\n          };\n          context.commit('updateBooks', books);\n          resolve();\n        }).catch(() => {\n          console.log('category err');\n          reject();\n        });\n      });\n    }\n  },\n  mutations: {\n    updateBooks(state, data) {\n      state.books = data;\n    }\n  },\n  state: {\n    books: {\n      models: [],\n      totalItems: 0\n    }\n  },\n  getters: {\n    getBooks(state) {\n      return state.books.models;\n    },\n    getPage(state) {\n      return state.books.totalItems;\n    }\n  }\n};","map":{"version":3,"names":["axios","actions","fetchBook","context","categoryId","page","Promise","resolve","reject","get","params","category","then","response","books","models","data","totalItems","Math","ceil","commit","catch","console","log","mutations","updateBooks","state","getters","getBooks","getPage"],"sources":["D:/vue/book-front/src/plugins/vuex/books/books.js"],"sourcesContent":["import axios from \"../axios\";\r\n\r\nexport default {\r\n\r\n    actions: {\r\n         fetchBook(context, categoryId = null, page = null) {\r\n             return new Promise((resolve, reject) => {\r\n                    axios.get('http://localhost:8085/api/books', {\r\n                     params: {\r\n                         category: categoryId,\r\n                         page: page,\r\n                     }\r\n                 })\r\n                 .then((response) => {\r\n\r\n                 let books = {\r\n                     models: response.data['hydra:member'],\r\n                     totalItems: Math.ceil(response.data['hydra:totalItems'] / 2),\r\n                 };\r\n\r\n                 context.commit('updateBooks', books)\r\n                 resolve()\r\n                 })\r\n                 .catch(() => {\r\n                     console.log('category err')\r\n                     reject()\r\n                 })\r\n             })\r\n         }\r\n    },\r\n\r\n    mutations: {\r\n        updateBooks(state, data) {\r\n            state.books = data\r\n        }\r\n    },\r\n\r\n    state: {\r\n        books: {\r\n            models: [],\r\n            totalItems: 0,\r\n        }\r\n\r\n    },\r\n\r\n    getters: {\r\n        getBooks(state) {\r\n            return state.books.models\r\n        },\r\n        getPage(state){\r\n            return state.books.totalItems\r\n        }\r\n\r\n    },\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,UAAU;AAE5B,eAAe;EAEXC,OAAO,EAAE;IACJC,SAASA,CAACC,OAAO,EAAEC,UAAU,GAAG,IAAI,EAAEC,IAAI,GAAG,IAAI,EAAE;MAC/C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACjCR,KAAK,CAACS,GAAG,CAAC,iCAAiC,EAAE;UAC5CC,MAAM,EAAE;YACJC,QAAQ,EAAEP,UAAU;YACpBC,IAAI,EAAEA;UACV;QACJ,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAK;UAEpB,IAAIC,KAAK,GAAG;YACRC,MAAM,EAAEF,QAAQ,CAACG,IAAI,CAAC,cAAc,CAAC;YACrCC,UAAU,EAAEC,IAAI,CAACC,IAAI,CAACN,QAAQ,CAACG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC;UAC/D,CAAC;UAEDb,OAAO,CAACiB,MAAM,CAAC,aAAa,EAAEN,KAAK,CAAC;UACpCP,OAAO,EAAE;QACT,CAAC,CAAC,CACDc,KAAK,CAAC,MAAM;UACTC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;UAC3Bf,MAAM,EAAE;QACZ,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EACL,CAAC;EAEDgB,SAAS,EAAE;IACPC,WAAWA,CAACC,KAAK,EAAEV,IAAI,EAAE;MACrBU,KAAK,CAACZ,KAAK,GAAGE,IAAI;IACtB;EACJ,CAAC;EAEDU,KAAK,EAAE;IACHZ,KAAK,EAAE;MACHC,MAAM,EAAE,EAAE;MACVE,UAAU,EAAE;IAChB;EAEJ,CAAC;EAEDU,OAAO,EAAE;IACLC,QAAQA,CAACF,KAAK,EAAE;MACZ,OAAOA,KAAK,CAACZ,KAAK,CAACC,MAAM;IAC7B,CAAC;IACDc,OAAOA,CAACH,KAAK,EAAC;MACV,OAAOA,KAAK,CAACZ,KAAK,CAACG,UAAU;IACjC;EAEJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}