{"ast":null,"code":"import axios from \"../axios\";\nexport default {\n  actions: {\n    async fetchBook({\n      commit\n    }, categoryId = null) {\n      const categoryUrl = categoryId ? `?category=${categoryId}` : '';\n      try {\n        const {\n          data\n        } = await axios.get(`http://localhost:8085/api/books${categoryUrl}`);\n        const books = {\n          models: data['hydra:member'],\n          totalItems: data['hydra:totalItems']\n        };\n        commit('updateBooks', books);\n      } catch (error) {\n        console.error(error);\n        throw error;\n      }\n    },\n    async fetchCategories({\n      commit\n    }) {\n      try {\n        const {\n          data1\n        } = await axios.get('http://localhost:8085/api/categories');\n        const categories = {\n          models: data1['hydra:member'],\n          totalItems: data1['hydra:totalItems']\n        };\n        commit('updateCategoriys', categories);\n      } catch (error) {\n        console.error(error);\n        throw error;\n      }\n    }\n  },\n  mutations: {\n    updateBooks(state, data) {\n      state.books = data;\n    },\n    updateCategoriys(state, data) {\n      state.books = data;\n    }\n  },\n  state: {\n    books: {\n      models: [],\n      totalItems: 0\n    },\n    categoriys: {\n      models: [],\n      totalItems: 0\n    }\n  },\n  getters: {\n    getBooks(state) {\n      return state.books.models;\n    },\n    getCategoriys(state) {\n      return state.categoriys.models;\n    }\n  }\n};","map":{"version":3,"names":["axios","actions","fetchBook","commit","categoryId","categoryUrl","data","get","books","models","totalItems","error","console","fetchCategories","data1","categories","mutations","updateBooks","state","updateCategoriys","categoriys","getters","getBooks","getCategoriys"],"sources":["D:/vue/book-front/src/plugins/vuex/books/books.js"],"sourcesContent":["import axios from \"../axios\";\r\n\r\nexport default {\r\n\r\n    actions: {\r\n        async fetchBook({ commit }, categoryId = null) {\r\n\r\n            const categoryUrl = categoryId ? `?category=${categoryId}` : '';\r\n\r\n            try {\r\n                const { data } = await axios.get(`http://localhost:8085/api/books${categoryUrl}`);\r\n\r\n                const books = {\r\n                    models: data['hydra:member'],\r\n                    totalItems: data['hydra:totalItems']\r\n                };\r\n\r\n                commit('updateBooks', books);\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n                throw error;\r\n            }\r\n        },\r\n        async fetchCategories({ commit }) {\r\n            try {\r\n                const { data1 } = await axios.get('http://localhost:8085/api/categories')\r\n\r\n                const categories = {\r\n                    models: data1['hydra:member'],\r\n                    totalItems: data1['hydra:totalItems']\r\n                };\r\n\r\n                commit('updateCategoriys', categories);\r\n            } catch (error) {\r\n                console.error(error);\r\n                throw error;\r\n            }\r\n        }\r\n    },\r\n\r\n    mutations: {\r\n        updateBooks(state, data) {\r\n            state.books = data\r\n        },\r\n        updateCategoriys(state, data) {\r\n            state.books = data\r\n        }\r\n    },\r\n\r\n    state: {\r\n        books: {\r\n            models: [],\r\n            totalItems: 0\r\n        },\r\n        categoriys: {\r\n            models: [],\r\n            totalItems: 0\r\n        }\r\n    },\r\n\r\n    getters: {\r\n        getBooks(state) {\r\n            return state.books.models\r\n        },\r\n        getCategoriys(state) {\r\n            return state.categoriys.models\r\n        }\r\n    },\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,UAAU;AAE5B,eAAe;EAEXC,OAAO,EAAE;IACL,MAAMC,SAASA,CAAC;MAAEC;IAAO,CAAC,EAAEC,UAAU,GAAG,IAAI,EAAE;MAE3C,MAAMC,WAAW,GAAGD,UAAU,GAAI,aAAYA,UAAW,EAAC,GAAG,EAAE;MAE/D,IAAI;QACA,MAAM;UAAEE;QAAK,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,kCAAiCF,WAAY,EAAC,CAAC;QAEjF,MAAMG,KAAK,GAAG;UACVC,MAAM,EAAEH,IAAI,CAAC,cAAc,CAAC;UAC5BI,UAAU,EAAEJ,IAAI,CAAC,kBAAkB;QACvC,CAAC;QAEDH,MAAM,CAAC,aAAa,EAAEK,KAAK,CAAC;MAEhC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB,MAAMA,KAAK;MACf;IACJ,CAAC;IACD,MAAME,eAAeA,CAAC;MAAEV;IAAO,CAAC,EAAE;MAC9B,IAAI;QACA,MAAM;UAAEW;QAAM,CAAC,GAAG,MAAMd,KAAK,CAACO,GAAG,CAAC,sCAAsC,CAAC;QAEzE,MAAMQ,UAAU,GAAG;UACfN,MAAM,EAAEK,KAAK,CAAC,cAAc,CAAC;UAC7BJ,UAAU,EAAEI,KAAK,CAAC,kBAAkB;QACxC,CAAC;QAEDX,MAAM,CAAC,kBAAkB,EAAEY,UAAU,CAAC;MAC1C,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB,MAAMA,KAAK;MACf;IACJ;EACJ,CAAC;EAEDK,SAAS,EAAE;IACPC,WAAWA,CAACC,KAAK,EAAEZ,IAAI,EAAE;MACrBY,KAAK,CAACV,KAAK,GAAGF,IAAI;IACtB,CAAC;IACDa,gBAAgBA,CAACD,KAAK,EAAEZ,IAAI,EAAE;MAC1BY,KAAK,CAACV,KAAK,GAAGF,IAAI;IACtB;EACJ,CAAC;EAEDY,KAAK,EAAE;IACHV,KAAK,EAAE;MACHC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE;IAChB,CAAC;IACDU,UAAU,EAAE;MACRX,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE;IAChB;EACJ,CAAC;EAEDW,OAAO,EAAE;IACLC,QAAQA,CAACJ,KAAK,EAAE;MACZ,OAAOA,KAAK,CAACV,KAAK,CAACC,MAAM;IAC7B,CAAC;IACDc,aAAaA,CAACL,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACE,UAAU,CAACX,MAAM;IAClC;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}