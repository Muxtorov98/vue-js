{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.pageCount, pageNumber => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: pageNumber\n    }, [_createVNode(_component_router_link, {\n      to: '/page/' + pageNumber,\n      onClick: $event => $data.currentPage = pageNumber\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(pageNumber), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\", \"onClick\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"p\", null, \"Current Page: \" + _toDisplayString($data.currentPage), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$options","pageCount","pageNumber","key","_createVNode","_component_router_link","to","onClick","$event","$data","currentPage","_toDisplayString"],"sources":["D:\\vue\\book-front\\src\\components\\helpers\\PaginationPart.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <ul>\r\n            <li v-for=\"pageNumber in pageCount\" :key=\"pageNumber\">\r\n                <router-link :to=\"'/page/'+pageNumber\" @click=\"currentPage = pageNumber\">{{ pageNumber }}</router-link>\r\n            </li>\r\n        </ul>\r\n        <p>Current Page: {{ currentPage }}</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions} from \"vuex\";\r\n\r\nexport default {\r\n    name: \"PaginationPart\",\r\n    data() {\r\n        return {\r\n            currentPage: 1,\r\n            itemsPerPage: 10,\r\n            totalItems: 100,\r\n        };\r\n    },\r\n    methods: {\r\n        ...mapActions(['fetchBook'])\r\n    },\r\n    computed: {\r\n        pageCount() {\r\n            return Math.ceil(this.totalItems / this.itemsPerPage);\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;;uBACIA,mBAAA,CAOM,cANFC,mBAAA,CAIK,c,kBAHDD,mBAAA,CAEKE,SAAA,QAAAC,WAAA,CAFoBC,QAAA,CAAAC,SAAS,EAAvBC,UAAU;yBAArBN,mBAAA,CAEK;MAFgCO,GAAG,EAAED;IAAU,IAChDE,YAAA,CAAuGC,sBAAA;MAAzFC,EAAE,aAAWJ,UAAU;MAAGK,OAAK,EAAAC,MAAA,IAAEC,KAAA,CAAAC,WAAW,GAAGR;;wBAAY,MAAgB,C,kCAAbA,UAAU,iB;;;;oCAG9FL,mBAAA,CAAsC,WAAnC,gBAAc,GAAAc,gBAAA,CAAGF,KAAA,CAAAC,WAAW,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}