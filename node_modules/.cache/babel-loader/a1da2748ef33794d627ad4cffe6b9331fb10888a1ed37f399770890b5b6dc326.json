{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"col-12 col-md-2\"\n};\nconst _hoisted_2 = {\n  class: \"list-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getCategories, category => {\n    return _openBlock(), _createElementBlock(\"a\", {\n      key: category.id,\n      \"aria-current\": \"true\"\n    }, _toDisplayString(category.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","_ctx","getCategories","category","key","id","name"],"sources":["D:\\vue\\book-front\\src\\components\\book\\BookCategoryPart.vue"],"sourcesContent":["<template>\r\n    <div class=\"col-12 col-md-2\">\r\n          <div class=\"list-group\">\r\n            <a v-for=\"category  in getCategories\" :key=\"category.id\" aria-current=\"true\">{{ category.name }}</a>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions, mapGetters} from \"vuex\";\r\n\r\nexport default {\r\n    name: \"BookCategoryPage\",\r\n    computed: {\r\n        ...mapGetters(['getCategories'])\r\n    },\r\n    methods: {\r\n        ...mapActions(['fetchCategory'])\r\n    },\r\n    mounted() {\r\n        this.fetchCategory()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAiB;;EACjBA,KAAK,EAAC;AAAY;;uBAD7BC,mBAAA,CAIM,OAJNC,UAIM,GAHAC,mBAAA,CAEI,OAFJC,UAEI,I,kBADFH,mBAAA,CAAoGI,SAAA,QAAAC,WAAA,CAA7EC,IAAA,CAAAC,aAAa,EAA1BC,QAAQ;yBAAlBR,mBAAA,CAAoG;MAA7DS,GAAG,EAAED,QAAQ,CAACE,EAAE;MAAE,cAAY,EAAC;wBAAUF,QAAQ,CAACG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}