{"ast":null,"code":"import axios from \"../axios\";\nexport default {\n  actions: {\n    fetchCategory(context) {\n      return new Promise((resolve, reject) => {\n        axios.get('http://localhost:8085/api/categories').then(response => {\n          console.log('category success');\n          console.log(response);\n          let category = {\n            models: response.data['hydra:member'],\n            totalItems: response.data['hydra:totalItems']\n          };\n          context.commit('updateCategory', category);\n          resolve();\n        }).catch(() => {\n          console.log('category err');\n          reject();\n        });\n      });\n    }\n  },\n  mutations: {\n    updateCategory(state, data) {\n      state.category = data;\n    }\n  },\n  state: {\n    category: {\n      models: [],\n      totalItems: 0\n    }\n  },\n  getters: {\n    getCategories(state) {\n      return state.category.models;\n    }\n  }\n};","map":{"version":3,"names":["axios","actions","fetchCategory","context","Promise","resolve","reject","get","then","response","console","log","category","models","data","totalItems","commit","catch","mutations","updateCategory","state","getters","getCategories"],"sources":["D:/vue/book-front/src/plugins/vuex/books/category.js"],"sourcesContent":["import axios from \"../axios\";\r\n\r\nexport default {\r\n    actions: {\r\n        fetchCategory(context) {\r\n            return new Promise((resolve, reject) => {\r\n                axios\r\n                    .get('http://localhost:8085/api/categories')\r\n                    .then((response) => {\r\n                        console.log('category success')\r\n                        console.log(response)\r\n\r\n                        let category = {\r\n                            models: response.data['hydra:member'],\r\n                            totalItems: response.data['hydra:totalItems']\r\n                        }\r\n\r\n                        context.commit('updateCategory', category)\r\n                        resolve()\r\n\r\n                    })\r\n                    .catch(() => {\r\n                        console.log('category err')\r\n                        reject()\r\n                    })\r\n            })\r\n        }\r\n    },\r\n\r\n    mutations: {\r\n        updateCategory(state, data) {\r\n            state.category = data\r\n        }\r\n    },\r\n\r\n    state: {\r\n        category: {\r\n            models: [],\r\n            totalItems: 0\r\n        }\r\n    },\r\n\r\n    getters: {\r\n        getCategories(state) {\r\n            return state.category.models\r\n        }\r\n    },\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,UAAU;AAE5B,eAAe;EACXC,OAAO,EAAE;IACLC,aAAaA,CAACC,OAAO,EAAE;MACnB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACpCN,KAAK,CACAO,GAAG,CAAC,sCAAsC,CAAC,CAC3CC,IAAI,CAAEC,QAAQ,IAAK;UAChBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;UAC/BD,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;UAErB,IAAIG,QAAQ,GAAG;YACXC,MAAM,EAAEJ,QAAQ,CAACK,IAAI,CAAC,cAAc,CAAC;YACrCC,UAAU,EAAEN,QAAQ,CAACK,IAAI,CAAC,kBAAkB;UAChD,CAAC;UAEDX,OAAO,CAACa,MAAM,CAAC,gBAAgB,EAAEJ,QAAQ,CAAC;UAC1CP,OAAO,EAAE;QAEb,CAAC,CAAC,CACDY,KAAK,CAAC,MAAM;UACTP,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;UAC3BL,MAAM,EAAE;QACZ,CAAC,CAAC;MACV,CAAC,CAAC;IACN;EACJ,CAAC;EAEDY,SAAS,EAAE;IACPC,cAAcA,CAACC,KAAK,EAAEN,IAAI,EAAE;MACxBM,KAAK,CAACR,QAAQ,GAAGE,IAAI;IACzB;EACJ,CAAC;EAEDM,KAAK,EAAE;IACHR,QAAQ,EAAE;MACNC,MAAM,EAAE,EAAE;MACVE,UAAU,EAAE;IAChB;EACJ,CAAC;EAEDM,OAAO,EAAE;IACLC,aAAaA,CAACF,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACR,QAAQ,CAACC,MAAM;IAChC;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}